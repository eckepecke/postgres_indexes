
=== SAVING INDEX STATISTICS ===
COPY 13
COPY 13
COPY 13
COPY 13

=== INDEX STORAGE OVERHEAD ===
        name         |   table    |  size   | table_size | pct_of_table |                                                definition                                                 
---------------------+------------+---------+------------+--------------+-----------------------------------------------------------------------------------------------------------
 order_line_i1       | order_line | 233 MB  | 915 MB     |        25.47 | CREATE UNIQUE INDEX order_line_i1 ON public.order_line USING btree (ol_w_id, ol_d_id, ol_o_id, ol_number)
 stock_i1            | stock      | 60 MB   | 775 MB     |         7.74 | CREATE UNIQUE INDEX stock_i1 ON public.stock USING btree (s_i_id, s_w_id)
 customer_i2         | customer   | 33 MB   | 455 MB     |         7.33 | CREATE UNIQUE INDEX customer_i2 ON public.customer USING btree (c_w_id, c_d_id, c_last, c_first, c_id)
 customer_c_last_idx | customer   | 31 MB   | 455 MB     |         6.78 | CREATE INDEX customer_c_last_idx ON public.customer USING btree (c_w_id, c_d_id, c_last, c_first)
 stock_level_idx     | stock      | 28 MB   | 775 MB     |         3.56 | CREATE INDEX stock_level_idx ON public.stock USING btree (s_w_id, s_quantity)
 orders_i2           | orders     | 26 MB   | 94 MB      |        27.93 | CREATE UNIQUE INDEX orders_i2 ON public.orders USING btree (o_w_id, o_d_id, o_c_id, o_id)
 orders_i1           | orders     | 24 MB   | 94 MB      |        25.32 | CREATE UNIQUE INDEX orders_i1 ON public.orders USING btree (o_w_id, o_d_id, o_id)
 customer_i1         | customer   | 18 MB   | 455 MB     |         4.02 | CREATE UNIQUE INDEX customer_i1 ON public.customer USING btree (c_w_id, c_d_id, c_id)
 new_order_i1        | new_order  | 8944 kB | 29 MB      |        30.07 | CREATE UNIQUE INDEX new_order_i1 ON public.new_order USING btree (no_w_id, no_d_id, no_o_id)
 new_order_combo_idx | new_order  | 8920 kB | 29 MB      |        29.99 | CREATE INDEX new_order_combo_idx ON public.new_order USING btree (no_w_id, no_d_id, no_o_id)
 item_i1             | item       | 2208 kB | 12 MB      |        17.34 | CREATE UNIQUE INDEX item_i1 ON public.item USING btree (i_id)
 district_i1         | district   | 40 kB   | 2608 kB    |         1.53 | CREATE UNIQUE INDEX district_i1 ON public.district USING btree (d_w_id, d_id)
 warehouse_i1        | warehouse  | 16 kB   | 1296 kB    |         1.23 | CREATE UNIQUE INDEX warehouse_i1 ON public.warehouse USING btree (w_id)
(13 rows)


=== DATABASE SETTINGS ===
 enable_indexscan 
------------------
 on
(1 row)

 enable_bitmapscan 
-------------------
 on
(1 row)

 enable_seqscan 
----------------
 on
(1 row)

 work_mem 
----------
 4MB
(1 row)

 maintenance_work_mem 
----------------------
 64MB
(1 row)

 random_page_cost 
------------------
 4
(1 row)

 effective_cache_size 
----------------------
 4GB
(1 row)


=== INDEX USAGE STATISTICS ===
        index        |   table    |  scans  | tuples_read | tuples_fetched | efficiency_pct 
---------------------+------------+---------+-------------+----------------+----------------
 stock_i1            | stock      | 2448681 |     3131555 |        2446222 |          78.12
 item_i1             | item       | 1346267 |     1344947 |        1344947 |         100.00
 customer_i1         | customer   |  459545 |     1080615 |         459544 |          42.53
 district_i1         | district   |  281076 |      571772 |         274607 |          48.03
 new_order_combo_idx | new_order  |  270700 |      977707 |         270170 |          27.63
 orders_i1           | orders     |  263700 |      289125 |         263700 |          91.21
 order_line_i1       | order_line |  147558 |    17413558 |        7137650 |          40.99
 warehouse_i1        | warehouse  |  144238 |      890983 |          30532 |           3.43
 customer_c_last_idx | customer   |   88942 |           0 |              0 |               
 stock_level_idx     | stock      |    8033 |    54283513 |              0 |           0.00
 customer_i2         | customer   |    8002 |           0 |              0 |               
 orders_i2           | orders     |    5525 |      933529 |         655150 |          70.18
 new_order_i1        | new_order  |       0 |           0 |              0 |               
(13 rows)

DROP HAMMERDB SCHEMA
HammerDB CLI v4.12
Copyright (C) 2003-2024 Steve Shaw
Type "help()" for a list of commands
exec(open('./scripts/python/postgres/tprocc/pg_tprocc_deleteschema.py').read())
SETTING CONFIGURATION
Database set to PostgreSQL
Benchmark set to TPC-C for PostgreSQL
Value postgres for connection:pg_host is the same as existing value postgres, no change made
Value 5432 for connection:pg_port is the same as existing value 5432, no change made
Value prefer for connection:pg_sslmode is the same as existing value prefer, no change made
Value postgres for tpcc:pg_superuser is the same as existing value postgres, no change made
Value postgres for tpcc:pg_superuserpass is the same as existing value postgres, no change made
Value postgres for tpcc:pg_defaultdbase is the same as existing value postgres, no change made
Value tpcc for tpcc:pg_user is the same as existing value tpcc, no change made
Value tpcc for tpcc:pg_pass is the same as existing value tpcc, no change made
Value tpcc for tpcc:pg_dbase is the same as existing value tpcc, no change made
DROP SCHEMA STARTED
Script cleared
Deleting schema with 1 Virtual User
Do you want to delete the TPCC TPROC-C schema and role TPCC
 in host POSTGRES:5432 under user POSTGRES?
Enter yes or no: replied yes
Vuser 1 created - WAIT IDLE
Vuser 1:RUNNING
Vuser 1:tpcc TPROC-C schema has been deleted successfully.
Vuser 1:tpcc TPROC-C role has been deleted successfully.
Vuser 1:FINISHED SUCCESS
ALL VIRTUAL USERS COMPLETE
DROP SCHEMA COMPLETED
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
HAMMERDB RESULT
HammerDB CLI v4.12
Copyright (C) 2003-2024 Steve Shaw
Type "help()" for a list of commands
exec(open('./scripts/python/postgres/tprocc/pg_tprocc_result.py').read())
tar: 20250403_134207: Cannot stat: No such file or directory
tar: Exiting with failure status due to previous errors
PostgreSQL metrics saved to: /home/HammerDB-4.12/hammerdb_results/MORE_MULTI_COLUMN/20250403_134207/postgres_metrics
Compressed metrics archive: /home/HammerDB-4.12/hammerdb_results/MORE_MULTI_COLUMN/20250403_134207.tar.gz
